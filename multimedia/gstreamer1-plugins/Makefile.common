# $FreeBSD$
#    $MCom: ports/multimedia/gstreamer1-plugins/Makefile.common,v 1.6 2012/10/13 23:38:02 kwm Exp $

# base
BASE_GST_ALL_PLUGINS= \
		alsa \
		cdparanoia \
		ivorbis \
		libvisual \
		ogg \
		pango \
		theora \
		vorbis \
		x \
		xvideo

# bad
BAD_GST_ALL_PLUGINS+= \
		assrender \
		celt \
		cdaudio \
		curl \
		dts \
		faac \
		faad \
		flite \
		gme \
		gsm \
		ladspa \
		libmms \
		modplug \
		mpeg2enc \
		mplex \
		nas \
		neon \
		opencv \
		resindvd \
		schro \
		sndfile \
		soundtouch \
		spandsp \
		spc \
		timidity \
		vdpau \
		zbar
#		apexsink \
#		bz2 \
#		cog \
#		dc1394 \
#		dirac \
#		directfb \
#		kate \
#		lv2 \
#		mimic \
#		musepack \
#		musicbrainz \
#		mythtv \
#		ofa \
#		rsvg \
#		sdl \
#		swfdec \
#		xvid \

# bad plugins that are disabled because we don't support them, like windows 
# plugins.
BAD_GST_NON_PLUGINS= \
		--enable-bz2 \
		--enable-dvb \
		--enable-shm \
		--disable-acm \
		--disable-apple_media \
		--disable-avc \
		--disable-dc1394 \
		--disable-dccp \
		--disable-direct3d9 \
		--disable-directdraw \
		--disable-directfb \
		--disable-directsound \
		--disable-fbdev \
		--disable-osx_video \
		--disable-uvch264 \
		--disable-vcd \
		--disable-wininet

# vo-amrwbenc (vo-amrwbenc > =0.1.0
# vo-aacenc vo-accenc > 0.1.0
# apexsink (AirPort Express Wireless sink) (openssl >= 0.9.5 + libcrypto)
# bz2
# cdaudio libcdaudio
# chromaprint (libchromaprint)
# cog (libpng)
# decklink (needs thread some FreeBSD probably and configure.ac patch)
# dirac (dirac >= 0.10)
# jasper jasperdec jasperenc (jasper/jasper.h)
# kate (multimedia/libkate >= 0.1.7) (needs libtiger, google code)
# ladspa
# lv2 (slv2 >= 0.6.6)
# linsys (linear Systems SDI plugin, needs configure voodo + code probably)
# mimic (libmimic)
# mjpegtools 
# mpg123 (libmpg123 >= 1.13)
# mplex (mjpegtools)
# musepack (mpcdec)
# musicbrainz ( > 2.1.0) doesn't support newer versions.
# mythtv (gmyth >= 0.4 <= 0.7.99)
# nas (audio/audiolib.h -laudio)
# neon >= 0.27.0 <= 0.29.99
# ofa (libofa)
# openal (openal)
# opus (libopus >= 0.9.4)
# pvr (libtimemmgr)??
# rsvg (not needed?)
# teletextdec (zvbi-0.2) Teletext decoder
# wildmidi ( WildMidi 0.2.2 ?)
# sdl
# sndfile
# soundtouch
# spc
# swfdec
# xvid
# rtmp (librtmp)
# gsettings (broken)
# sndio (sndio.h, libsndio)
# 
# 

# good
GOOD_GST_ALL_PLUGINS+= \
		aalib \
		cairo \
		flac \
		gdk_pixbuf \
		jack \
		jpeg \
		libcaca \
		libdv \
		libpng \
		gst_v4l2 \
		pulse \
		shout2 \
		soup \
		speex \
		taglib \
		vpx \
		wavpack \
		x

GOOD_GST_NON_PLUGINS=	\
		--disable-directsound \
		--enable-bz2 \
		--disable-dv1394 \
		--enable-oss \
		--enable-oss4 \
		--disable-osx_audio \
		--disable-osx_video \
		--disable-sunaudio \
		--disable-waveform \
		--enable-zlib

# ugly
UGLY_GST_ALL_PLUGINS+= \
		a52dec \
		amrnb \
		amrwb \
		cdio \
		dvdread \
		lame \
		mad \
		mpeg2dec \
		sidplay \
		twolame \
		x264

UGLY_GST_NON_PLUGINS=

#.for i in ${BASE_GST_ALL_PLUGINS} ${BAD_GST_ALL_PLUGINS} ${UGLY_GST_ALL_PLUGINS}
#gst_${i}_USE_SDL?=		# Empty
#.endfor

# Disable all plugins by default
.if ${DIST}=="base"
.for d in ${BASE_GST_ALL_PLUGINS}
CONFIGURE_ARGS+=	--disable-${d}
.endfor
.endif

.if ${DIST}=="bad"
.for d in ${BAD_GST_ALL_PLUGINS}
CONFIGURE_ARGS+=	--disable-${d}
.endfor
CONFIGURE_ARGS+= ${BAD_GST_NON_PLUGINS}
# Isn't ported yet, in 1.0.0
CONFIGURE_ARGS+=--disable-gsettings
.endif

.if ${DIST}=="good"
.for d in ${GOOD_GST_ALL_PLUGINS}
CONFIGURE_ARGS+=	--disable-${d}
.endfor
CONFIGURE_ARGS+= ${GOOD_GST_NON_PLUGINS}
.endif

.if ${DIST}=="ugly"
.for d in ${UGLY_GST_ALL_PLUGINS}
CONFIGURE_ARGS+=	--disable-${d}
.endfor
CONFIGURE_ARGS+= ${UGLY_GST_NON_PLUGINS}
.endif

.if !${GST_PLUGIN}=="base" && !${GST_PLUGIN}=="bad" && !${GST_PLUGIN}=="good" && !${GST_PLUGIN}=="ugly"
CONFIGURE_ARGS+=	--enable-${GST_PLUGIN}
.endif

# plugins disabled by default from bad
# done above under bad plugin summary
#CONFIGURE_ARGS+=--disable-tests \
#		--disable-examples \
#		--disable-cd1394 \
#		--disable-acm \
#		--disable-apexsink \
#		--enable-cog \
#		--disable-fbdev \
#		--disable-directfb \
#		--disable-http \
#		--enable-cdrom \
#		--disable-schemas-install \
#		--disable-osx_audio \
#		--disable-osx_video \
#		--disable-directdrawsink \
#		--disable-directsoundsink \
#		--disable-tarkin \
#		--enable-shm \
#		--enable-static \
#		--disable-sunaudio \
#		--disable-wildmidi \
#		--disable-xine \

.if !defined(NO_GSTREAMER_COMMON)
GST_PLUGIN_SUFFIX?=	-${GST_PLUGIN}

# Enable the right plugin

CONFIGURE_ARGS:=${CONFIGURE_ARGS:S|--disable-${GST_PLUGIN}|--enable-${GST_PLUGIN}|}

GST_INC_DIR=		include/gstreamer-${VERSION}
GST_LIB_DIR=		lib/gstreamer-${VERSION}

# Auto create PLIST
PLIST=		${NONEXISTENT}

# ------- plugins ---------

# a52dec
gst_a52dec_LIB_DEPENDS=	a52:${PORTSDIR}/audio/liba52

# aalib
gst_aalib_LIB_DEPENDS=	aa:${PORTSDIR}/graphics/aalib
gst_aalib_PLIST_FILES=	${GST_LIB_DIR}/libgstaasink.la \
			${GST_LIB_DIR}/libgstaasink.so

# amrnb
gst_amrnb_LIB_DEPENDS=	opencore-amrnb:${PORTSDIR}/audio/opencore-amr
gst_amrnb_PLIST_FILES=	${GST_LIB_DIR}/libgstamrnb.la \
			${GST_LIB_DIR}/libgstamrnb.so \
			share/gstreamer-${VERSION}/presets/GstAmrnbEnc.prs
gst_amrnb_PLIST_DIRS=	share/gstreamer-${VERSION}/presets \
			share/gstreamer-${VERSION}

# amrwb
gst_amrwb_LIB_DEPENDS=		opencore-amrwb:${PORTSDIR}/audio/opencore-amr
gst_amrwb_GST_PLUGIN_DIR=	ext/amrwbdec
gst_amrwb_PLIST_FILES=		${GST_LIB_DIR}/libgstamrwbdec.la \
				${GST_LIB_DIR}/libgstamrwbdec.so

# assrender
gst_assrender_LIB_DEPENDS=	ass:${PORTSDIR}/multimedia/libass

## cairo , what about cairooverlay?
gst_cairo_LIB_DEPENDS=	cairo:${PORTSDIR}/graphics/cairo
#gst_cairo_PLIST_FILES=		${GST_LIB_DIR}/libgstcairo.la \
#				${GST_LIB_DIR}/libgstcairo.so

## cdaudio
gst_cdaudio_LIB_DEPENDS=	cdaudio:${PORTSDIR}/audio/libcdaudio
gst_cdaudio_PLIST_FILES=	${GST_LIB_DIR}/libgstcdaudio.la \
				${GST_LIB_DIR}/libgstcdaudio.so
#gst_cdaudio_DIST=	bad

# cdparanoia
gst_cdparanoia_LIB_DEPENDS=	cdda_interface:${PORTSDIR}/audio/cdparanoia

# cdio
gst_cdio_LIB_DEPENDS=	cdio:${PORTSDIR}/sysutils/libcdio

# celt
gst_celt_LIB_DEPENDS=	celt0:${PORTSDIR}/audio/celt

# curl
gst_curl_LIB_DEPENDS=	curl:${PORTSDIR}/ftp/curl

# dts
gst_dts_LIB_DEPENDS=	dca:${PORTSDIR}/multimedia/libdca
gst_dts_PLIST_FILES=	${GST_LIB_DIR}/libgstdtsdec.la \
			${GST_LIB_DIR}/libgstdtsdec.so

# libdv
gst_libdv_LIB_DEPENDS=		dv:${PORTSDIR}/multimedia/libdv
gst_libdv_GST_PLUGIN_DIR=	ext/dv
gst_libdv_PLIST_FILES=		${GST_LIB_DIR}/libgstdv.la \
				${GST_LIB_DIR}/libgstdv.so

# dvdread
gst_dvd_LIB_DEPENDS=	dvdread:${PORTSDIR}/multimedia/libdvdread

# exif xxx
# hmm not a real plugin, seems to be part of metadata?
#gst_exif_LIB_DEPENDS=	exif:${PORTSDIR}/graphics/libexif
#gst_exif_PLIST_FILES=	${GST_LIB_DIR}/libgstexif.la \
#			${GST_LIB_DIR}/libgstexif.so
#gst_exif_DIST=	bad

# faac
gst_faac_LIB_DEPENDS=	faac:${PORTSDIR}/audio/faac

# faad
gst_faad_LIB_DEPENDS=	faad:${PORTSDIR}/audio/faad

# flac
gst_flac_LIB_DEPENDS=	FLAC:${PORTSDIR}/audio/flac

# flite
gst_flite_LIB_DEPENDS=	flite:${PORTSDIR}/audio/flite

# gdk_pixbuf
gst_gdk_pixbuf_USE_GNOME+=	gdkpixbuf2
gst_gdk_pixbuf_GST_PLUGIN_DIR=	ext/gdk_pixbuf
gst_gdk_pixbuf_PLIST_FILES=	${GST_LIB_DIR}/libgstgdkpixbuf.la \
				${GST_LIB_DIR}/libgstgdkpixbuf.so

# gme
gst_gme_LIB_DEPENDS=	gme:${PORTSDIR}/audio/libgme

# gsm
gst_gsm_LIB_DEPENDS=	gsm:${PORTSDIR}/audio/gsm

# jack
gst_jack_LIB_DEPENDS=	jack:${PORTSDIR}/audio/jack

# jpeg
gst_jpeg_LIB_DEPENDS=	jpeg:${PORTSDIR}/graphics/jpeg

## ladspa
gst_ladspa_BUILD_DEPENDS=	${LOCALBASE}/include/ladspa.h:${PORTSDIR}/audio/ladspa
gst_ladspa_PLIST_FILES=		${GST_LIB_DIR}/libgstladspa.la \
				${GST_LIB_DIR}/libgstladspa.so
#gst_ladspa_DIST=	bad

# lame
gst_lame_LIB_DEPENDS=	mp3lame:${PORTSDIR}/audio/lame

# libcaca
gst_libcaca_LIB_DEPENDS=	caca:${PORTSDIR}/graphics/libcaca
gst_libcaca_PLIST_FILES=	${GST_LIB_DIR}/libgstcacasink.la \
				${GST_LIB_DIR}/libgstcacasink.so

# libmms
gst_libmms_LIB_DEPENDS=	mms:${PORTSDIR}/net/libmms
gst_libmms_PLIST_FILES=	${GST_LIB_DIR}/libgstmms.so \
			${GST_LIB_DIR}/libgstmms.la

# libpng
gst_libpng_LIB_DEPENDS=	png15:${PORTSDIR}/graphics/png
gst_libpng_PLIST_FILES=	${GST_LIB_DIR}/libgstpng.la \
			${GST_LIB_DIR}/libgstpng.so

# libvisual
gst_libvisual_LIB_DEPENDS=	visual-0.4:${PORTSDIR}/graphics/libvisual04

# mad
gst_mad_LIB_DEPENDS=	mad:${PORTSDIR}/audio/libmad

# modplug
gst_modplug_LIB_DEPENDS=	modplug:${PORTSDIR}/audio/libmodplug

# mpeg2enc
gst_mpeg2enc_LIB_DEPENDS=	mjpegutils-2.0:${PORTSDIR}/multimedia/mjpegtools

# mpeg2dec
gst_mpeg2dec_LIB_DEPENDS=	mpeg2:${PORTSDIR}/multimedia/libmpeg2

## musepack
gst_musepack_LIB_DEPENDS=	mpcdec:${PORTSDIR}/audio/musepack
gst_musepack_PLIST_FILES=	${GST_LIB_DIR}/libgstmusepack.la \
				${GST_LIB_DIR}/libgstmusepack.so
#gst_musepack_DIST=	bad

## musicbrainz
#gst_musicbrainz_LIB_DEPENDS=	musicbrainz.4:${PORTSDIR}/audio/libmusicbrainz
#gst_musicbrainz_PLIST_FILES=	${GST_LIB_DIR}/libgsttrm.so \
#		${GST_LIB_DIR}/libgsttrm.la
#gst_musicbrainz_DIST=	bad

## nas
gst_nas_LIB_DEPENDS=	audio.2:${PORTSDIR}/audio/nas
gst_nas_PLIST_FILES=	${GST_LIB_DIR}/libgstnassink.la \
			${GST_LIB_DIR}/libgstnassink.so
#gst_nas_DIST=	bad

## neon
gst_neon_LIB_DEPENDS=	neon:${PORTSDIR}/www/neon29
#gst_neon_CONFIGURE_ENV+=	NEON_CFLAGS="-I${LOCALBASE}/include/neon"
#gst_neon_PLIST_FILES=	${GST_LIB_DIR}/libgstneonhttpsrc.la \
#			${GST_LIB_DIR}/libgstneonhttpsrc.so
#gst_neon_DIST=		bad

# ogg
gst_ogg_LIB_DEPENDS=	ogg:${PORTSDIR}/audio/libogg

# opencv
gst_opencv_LIB_DEPENDS=	opencv_highgui:${PORTSDIR}/graphics/opencv

## pango
gst_pango_USE_GNOME+=	pango
gst_pango_PLIST_FILES=	${GST_LIB_DIR}/libgstpango.la \
			${GST_LIB_DIR}/libgstpango.so

# pulse
gst_pulse_LIB_DEPENDS=	pulse:${PORTSDIR}/audio/pulseaudio

# resindvd
gst_resindvd_BUILD_DEPENDS+=	libdvdnav>=4.1.2:${PORTSDIR}/multimedia/libdvdnav
gst_resindvd_RUN_DEPENDS+=	libdvdnav>=4.1.2:${PORTSDIR}/multimedia/libdvdnav

## sdl
gst_sdl_USE_SDL=	sdl
gst_sdl_PLIST_FILES=	${GST_LIB_DIR}/libgstsdl.la \
			${GST_LIB_DIR}/libgstsdl.so
#gst_sdl_DIST=	bad

# shout2
gst_shout2_LIB_DEPENDS=	shout:${PORTSDIR}/audio/libshout2

# sidplay
gst_sidplay_LIB_DEPENDS=	sidplay:${PORTSDIR}/audio/libsidplay
gst_sidplay_PLIST_FILES=	${GST_LIB_DIR}/libgstsid.so \
				${GST_LIB_DIR}/libgstsid.la

## sndfile
gst_sndfile_LIB_DEPENDS=	sndfile:${PORTSDIR}/audio/libsndfile
#gst_sndfile_PLIST_FILES=	${GST_LIB_DIR}/libgstsndfile.la \
#		${GST_LIB_DIR}/libgstsndfile.so
#gst_sndfile_DIST=	bad

# soundtouch
gst_soundtouch_LIB_DEPENDS=	SoundTouch:${PORTSDIR}/audio/soundtouch

# souphttpsrc
gst_soup_LIB_DEPENDS=	soup-2.4:${PORTSDIR}/devel/libsoup
gst_soup_GST_PLUGIN_DIR=ext/soup
gst_soup_PLIST_FILES=	${GST_LIB_DIR}/libgstsouphttpsrc.la \
			${GST_LIB_DIR}/libgstsouphttpsrc.so

# spandsp
# keep shlib version here, so we don't pick up the 0.0.5 version.
gst_spandsp_LIB_DEPENDS=	spandsp.2:${PORTSDIR}/comms/spandsp-devel

# xxx
## spc
gst_spc_LIB_DEPENDS=	openspc:${PORTSDIR}/audio/libopenspc
#gst_spc_PLIST_FILES=	${GST_LIB_DIR}/libgstspc.la \
#		${GST_LIB_DIR}/libgstspc.so
#gst_spc_DIST=		bad

# speex
gst_speex_LIB_DEPENDS=	speex:${PORTSDIR}/audio/speex

# schroedinger or schro for short
gst_schro_LIB_DEPENDS=		schroedinger-1.0:${PORTSDIR}/multimedia/schroedinger
gst_schro_GST_PLUGIN_DIR=	ext/schroedinger

## swfdec
gst_swfdec_LIB_DEPENDS=swfdec-0.4:${PORTSDIR}/graphics/swfdec
#gst_swfdec_DIST=	bad

# taglib
gst_taglib_LIB_DEPENDS=	tag:${PORTSDIR}/audio/taglib

# theora
gst_theora_LIB_DEPENDS=	theora:${PORTSDIR}/multimedia/libtheora

## timidity
#gst_timidity_LIB_DEPENDS=	

# twolame
gst_twolame_LIB_DEPENDS=	twolame:${PORTSDIR}/audio/twolame

# gst_v4l2
gst_gst_v4l2_LIB_DEPENDS=	v4l2:${PORTSDIR}/multimedia/libv4l
.if ${OSVERSION} >= 800000
gst_gst_v4l2_RUN_DEPENDS+=	webcamd:${PORTSDIR}/multimedia/webcamd
.endif
gst_gst_v4l2_PLIST_FILES=	${GST_LIB_DIR}/libgstvideo4linux2.la \
				${GST_LIB_DIR}/libgstvideo4linux2.so
#gst_gst_v4l2_CONFIGURE_ARGS+=	--enable-gst_v4l2
gst_gst_v4l2_GST_PLUGIN_DIR=	sys/v4l2

# vdpau
gst_vdpau_LIB_DEPENDS=	vdpau:${PORTSDIR}/multimedia/libvdpau
gst_vdpau_GST_PLUGIN_DIR=sys/vdpau
gst_vdpau_PLIST_FILES=	${GST_INC_DIR}/gst/vdpau/gstvdp.h \
			${GST_INC_DIR}/gst/vdpau/gstvdpbuffer.h \
			${GST_INC_DIR}/gst/vdpau/gstvdpbufferpool.h \
			${GST_INC_DIR}/gst/vdpau/gstvdpdecoder.h \
			${GST_INC_DIR}/gst/vdpau/gstvdpdevice.h \
			${GST_INC_DIR}/gst/vdpau/gstvdpoutputbuffer.h \
			${GST_INC_DIR}/gst/vdpau/gstvdpoutputbufferpool.h \
			${GST_INC_DIR}/gst/vdpau/gstvdpoutputsrcpad.h \
			${GST_INC_DIR}/gst/vdpau/gstvdputils.h \
			${GST_INC_DIR}/gst/vdpau/gstvdpvideobuffer.h \
			${GST_INC_DIR}/gst/vdpau/gstvdpvideobufferpool.h \
			${GST_INC_DIR}/gst/vdpau/gstvdpvideosrcpad.h \
			${GST_LIB_DIR}/libgstvdpau.la \
			${GST_LIB_DIR}/libgstvdpau.so \
			lib/libgstvdp-${VERSION}.la \
			lib/libgstvdp-${VERSION}.so \
			lib/libgstvdp-${VERSION}.so.0
gst_vdpau_PLIST_DIRS=	${GST_INC_DIR}/gst/vdpau
#gst_vdpau_DIST=		bad

# vorbis
gst_vorbis_USE_GSTREAMER1+=	ogg
gst_vorbis_LIB_DEPENDS=	vorbis:${PORTSDIR}/audio/libvorbis
#gst_vorbis_EXTRA_LIBS+=	-lgsttag-${VERSION} -lgstaudio-${VERSION}
gst_vorbis_PLIST_FILES=		${GST_LIB_DIR}/libgstvorbis.la \
				${GST_LIB_DIR}/libgstvorbis.so
#gst_vorbis_DIST=	base

# vpx
gst_vpx_LIB_DEPENDS=	vpx:${PORTSDIR}/multimedia/libvpx

# X
.if ${DIST} == base
gst_x_USE_XORG=		x11 xv xext
gst_x_CONFIGURE_ARGS+=	--enable-xvideo --enable-xshm
gst_x_GST_PLUGIN_DIR=	sys/ximage sys/xvimage
gst_x_PLIST_FILES=	${GST_LIB_DIR}/libgstximagesink.la \
			${GST_LIB_DIR}/libgstximagesink.so \
			${GST_LIB_DIR}/libgstxvimagesink.la \
			${GST_LIB_DIR}/libgstxvimagesink.so
.endif

.if ${DIST} == good
# Ximagesrc
gst_x_USE_XORG=		x11 xfixes xdamage xext
gst_x_CONFIGURE_ARGS+=	--enable-x
gst_x_GST_PLUGIN_DIR=	sys/ximage
gst_x_PLIST_FILES=	${GST_LIB_DIR}/libgstximagesrc.la \
			${GST_LIB_DIR}/libgstximagesrc.so
.endif

## x264
gst_x264_LIB_DEPENDS=	x264:${PORTSDIR}/multimedia/x264
gst_x264_PLIST_FILES=	${GST_LIB_DIR}/libgstx264.la \
			${GST_LIB_DIR}/libgstx264.so \
			share/gstreamer-${VERSION}/presets/GstX264Enc.prs
gst_x264_PLIST_DIRS=	share/gstreamer-${VERSION}/presets \
			share/gstreamer-${VERSION}

## xvid
gst_xvid_LIB_DEPENDS=	xvidcore:${PORTSDIR}/multimedia/xvid
gst_xvid_PLIST_FILES=	${GST_LIB_DIR}/libgstxvid.la \
			${GST_LIB_DIR}/libgstxvid.so
#gst_xvid_DIST=	bad

# wavpack
gst_wavpack_LIB_DEPENDS=	wavpack:${PORTSDIR}/audio/wavpack

# zbar
gst_zbar_LIB_DEPENDS=	zbar:${PORTSDIR}/graphics/zbar

.endif # NO_GSTREAMER_COMMON

.if !defined(NO_GSTREAMER_COMMON)
gst_${GST_PLUGIN}_BUILD_DEPENDS?=
gst_${GST_PLUGIN}_LIB_DEPENDS?=
gst_${GST_PLUGIN}_RUN_DEPENDS?=
gst_${GST_PLUGIN}_USE_XORG?=
gst_${GST_PLUGIN}_PLIST_FILES?= \
		${GST_LIB_DIR}/libgst${GST_PLUGIN}${GST_PLIST_SUFFIX}.la \
		${GST_LIB_DIR}/libgst${GST_PLUGIN}${GST_PLIST_SUFFIX}.so
gst_${GST_PLUGIN}_EXTRA_LIBS?=
gst_${GST_PLUGIN}_PREBUILD_DIR?=
gst_${GST_PLUGIN}_GST_PLUGIN_DIR?=	ext/${GST_PLUGIN}
gst_${GST_PLUGIN}_POSTBUILD_DIR?=
gst_${GST_PLUGIN}_USE_GNOME?=
gst_${GST_PLUGIN}_CONFIGURE_ENV?=
gst_${GST_PLUGIN}_GLIB_SCHEMAS?=
gst_${GST_PLUGIN}_CONFIGURE_ARGS?=
gst_${GST_PLUGIN}_USE_SDL?=
gst_${GST_PLUGIN}_USE_GSTREAMER1?=

BUILD_DEPENDS+=	${gst_${GST_PLUGIN}_BUILD_DEPENDS}
LIB_DEPENDS+=	${gst_${GST_PLUGIN}_LIB_DEPENDS}
RUN_DEPENDS+=	${gst_${GST_PLUGIN}_RUN_DEPENDS}
PLIST_FILES=	${gst_${GST_PLUGIN}_PLIST_FILES}
PLIST_DIRS=	${gst_${GST_PLUGIN}_PLIST_DIRS}
EXTRA_LIBS+=	${gst_${GST_PLUGIN}_EXTRA_LIBS}
USE_XORG+=	${gst_${GST_PLUGIN}_USE_XORG}
USE_GNOME+=	${gst_${GST_PLUGIN}_USE_GNOME}
CONFIGURE_ENV+=	${gst_${GST_PLUGIN}_CONFIGURE_ENV}

.if ${gst_${GST_PLUGIN}_GLIB_SCHEMAS}!=""
GLIB_SCHEMAS=	${gst_${GST_PLUGIN}_GLIB_SCHEMAS}
.endif

CONFIGURE_ARGS+=	${gst_${GST_PLUGIN}_CONFIGURE_ARGS}

.if ${gst_${GST_PLUGIN}_USE_SDL}!=""
USE_SDL=		${gst_${GST_PLUGIN}_USE_SDL}
.endif

USE_GSTREAMER1+=	${gst_${GST_PLUGIN}_USE_GSTREAMER1} ${DIST:S/base/yes/}
GST_PREBUILD_DIR=	${gst_${GST_PLUGIN}_GST_PREBUILD_DIR}
GST_PLUGIN_DIR=		${gst_${GST_PLUGIN}_GST_PLUGIN_DIR}
GST_POSTBUILD_DIR=	${gst_${GST_PLUGIN}_GST_POSTBUILD_DIR}

.if !target(do-build)
do-build:
.for dir in ${GST_PREBUILD_DIR} ${GST_PLUGIN_DIR} ${GST_POSTBUILD_DIR}
	@cd ${WRKSRC}/${dir}; ${SETENV} ${MAKE_ENV} ${GMAKE} ${MAKE_FLAGS} \
		${MAKEFILE} ${MAKE_ARGS} ${ALL_TARGET}
.endfor
.endif

.if !target(do-install)
do-install:
.for dir in ${GST_PLUGIN_DIR}
	@cd ${WRKSRC}/${dir}; ${SETENV} ${MAKE_ENV} ${GMAKE} ${MAKE_FLAGS} \
		${MAKEFILE} ${MAKE_ARGS} ${INSTALL_TARGET}
.endfor
.endif
.endif
